<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sp_prototype_push_block_big</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Set up the fixture for the block

fix = physics_fixture_create();

bezel = 0;
if(bezel == 0)
{
  // Build the fixture point by point, but as a rectangle.
  physics_fixture_set_polygon_shape(fix);
  physics_fixture_add_point(fix, 0, 0);
  physics_fixture_add_point(fix, sprite_width, 0);
  physics_fixture_add_point(fix, sprite_width, sprite_height);
  physics_fixture_add_point(fix, 0, sprite_height);
}
else
{
  // Build the fixture point by point, but with a bevel.
  // It will end up looking like this:
  //
  //    / - \
  //    |   |       vs. a normal square
  //    \ - /
  //
  physics_fixture_set_polygon_shape(fix);
  physics_fixture_add_point(fix, 0, bevel);
  physics_fixture_add_point(fix, bevel, 0);
  physics_fixture_add_point(fix, sprite_width - bevel, 0);
  physics_fixture_add_point(fix, sprite_width, bevel);
  physics_fixture_add_point(fix, sprite_width, sprite_height - bevel);
  physics_fixture_add_point(fix, sprite_width - bevel, sprite_height);
  physics_fixture_add_point(fix, bevel, sprite_height);
  physics_fixture_add_point(fix, 0, sprite_height - bevel);
}

// Set the physics properties of the fixture
physics_fixture_set_density(fix, push_block_density);
physics_fixture_set_collision_group(fix, push_block_collision_group);
physics_fixture_set_friction(fix, push_block_friction);
physics_fixture_set_linear_damping(fix, push_block_linear_dampening);
physics_fixture_set_angular_damping(fix, push_block_angular_dampening);
physics_fixture_set_restitution(fix, push_block_restitution);

// Bind the darn fixture
physics_fixture_bind(fix, id);

// Non physics-engine based physical properties
player_was_touching_me_inappropriately = false;
collision_x[0] = 0;
collision_x[1] = 0;
collision_y[0] = 0;
collision_y[1] = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="ob_prototype_barrier_block">
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>null</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="ob_prototype_push_block_big">
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>null</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="ob_prototype_player">
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>null</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>-1</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>2</PhysicsObjectShape>
  <PhysicsObjectDensity>10</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>62,1</point>
    <point>63,2</point>
    <point>63,62</point>
    <point>62,63</point>
    <point>2,63</point>
    <point>1,62</point>
    <point>1,2</point>
    <point>2,1</point>
  </PhysicsShapePoints>
</object>
