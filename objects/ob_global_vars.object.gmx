<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sp_global_vars</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>Bindings</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Bindings

// Movement Keys
// Left
globalvar binding_left_button_held;
binding_left_button_held = false;

globalvar binding_left_button_pressed;
binding_left_button_pressed = false;

globalvar binding_left_button_released;
binding_left_button_released = false;

globalvar binding_left_button_default;
binding_left_button_default = vk_left;

globalvar binding_left_button_current;
binding_left_button_current = vk_left;

// Right
globalvar binding_right_button_held;
binding_right_button_held = false;

globalvar binding_right_button_pressed;
binding_right_button_pressed = false;

globalvar binding_right_button_released;
binding_right_button_released = false;

globalvar binding_right_button_default;
binding_right_button_default = vk_right;

globalvar binding_right_button_current;
binding_right_button_current = vk_right;

// Up
globalvar binding_up_button_held;
binding_up_button_held = false;

globalvar binding_up_button_pressed;
binding_up_button_pressed = false;

globalvar binding_up_button_released;
binding_up_button_released = false;

globalvar binding_up_button_default;
binding_up_button_default = vk_up;

globalvar binding_up_button_current;
binding_up_button_current = vk_up;

// Down
globalvar binding_down_button_held;
binding_down_button_held = false;

globalvar binding_down_button_pressed;
binding_down_button_pressed = false;

globalvar binding_down_button_released;
binding_down_button_released = false;

globalvar binding_down_button_default;
binding_down_button_default = vk_down;

globalvar binding_down_button_current;
binding_down_button_current = vk_down;

// Action keys
// Jump
globalvar binding_jump_button_held;
binding_jump_button_held = false;

globalvar binding_jump_button_pressed;
binding_jump_button_pressed = false;

globalvar binding_jump_button_released;
binding_jump_button_released = false;

globalvar binding_jump_button_default;
binding_jump_button_default = vk_space;

globalvar binding_jump_button_current;
binding_jump_button_current = vk_space;

// Use
globalvar binding_use_button_held;
binding_use_button_held = false;

globalvar binding_use_button_pressed;
binding_use_button_pressed = false;

globalvar binding_use_button_released;
binding_use_button_released = false;

globalvar binding_use_button_default;
binding_use_button_default = ord("C");

globalvar binding_use_button_current;
binding_use_button_current = ord("C");

// Recall Teleporters
globalvar binding_recall_teleporters_button_held;
binding_recall_teleporters_button_held = false;

globalvar binding_recall_teleporters_button_pressed;
binding_recall_teleporters_button_pressed = false;

globalvar binding_recall_teleporters_button_released;
binding_recall_teleporters_button_released = false;

globalvar binding_recall_teleporters_button_default;
binding_recall_teleporters_button_default = ord("X");

globalvar binding_recall_teleporters_button_current;
binding_recall_teleporters_button_current = ord("X");

// Throw Teleporters
globalvar binding_throw_teleporter_button_held;
binding_throw_teleporter_button_held = false;

globalvar binding_throw_teleporter_button_pressed;
binding_throw_teleporter_button_pressed = false;

globalvar binding_throw_teleporter_button_released;
binding_throw_teleporter_button_released = false;

globalvar binding_throw_teleporter_button_default;
binding_throw_teleporter_button_default = ord("Z");

globalvar binding_throw_teleporter_button_current;
binding_throw_teleporter_button_current = ord("Z");

// Use Green Teleporter
globalvar binding_use_green_teleporter_button_held;
binding_use_green_teleporter_button_held = false;

globalvar binding_use_green_teleporter_button_pressed;
binding_use_green_teleporter_button_pressed = false;

globalvar binding_use_green_teleporter_button_released;
binding_use_green_teleporter_button_released = false;

globalvar binding_use_green_teleporter_button_default;
binding_use_green_teleporter_button_default = ord("A");

globalvar binding_use_green_teleporter_button_current;
binding_use_green_teleporter_button_current = ord("A");

// Use Orange Teleporter
globalvar binding_use_orange_teleporter_button_held;
binding_use_orange_teleporter_button_held = false;

globalvar binding_use_orange_teleporter_button_pressed;
binding_use_orange_teleporter_button_pressed = false;

globalvar binding_use_orange_teleporter_button_released;
binding_use_orange_teleporter_button_released = false;

globalvar binding_use_orange_teleporter_button_default;
binding_use_orange_teleporter_button_default = ord("S");

globalvar binding_use_orange_teleporter_button_current;
binding_use_orange_teleporter_button_current = ord("S");



/* 

This is just a blank template for adding more keybindings conveniently. 


// 
globalvar binding__button_held;
binding__button_held = false;

globalvar binding__button_pressed;
binding__button_pressed = false;

globalvar binding__button_released;
binding__button_released = false;

globalvar binding__button_default;
binding__button_default = vk_;

globalvar binding__button_current;
binding__button_current = vk_;


*/
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string></string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>Player Stuff</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Player Stuff
// Player movement constants
globalvar movement_running_force;
movement_running_force = 10 * 4;

globalvar movement_jumping_impulse;
movement_jumping_impulse = 7.4 * 2;

globalvar phy_speed_x_max;
phy_speed_x_max = 8;

globalvar phy_speed_y_max;
phy_speed_y_max = 10;

globalvar player_movement_sidding_threshold;
player_movement_sidding_threshold = 1;

globalvar player_movement_falling_threshold;
player_movement_falling_threshold = 1;


// Player movement variables (initialization)
globalvar player_on_top_of_barrier_block;
player_on_top_of_barrier_block = false;

globalvar player_bumping_barrier_block_side;
player_bumping_barrier_block_side = "none";

globalvar player_jump_button_pressed;
player_jump_button_pressed = false;

globalvar player_headbutting_barrier_block;
player_headbutting_barrier_block = false;


// Player state variables
globalvar player_movement_state;
player_movement_state = "standing";

globalvar player_action_state;
player_action_state = "idle";

globalvar player_facing_state;
player_facing_state = "right";


// Player inventory variables
globalvar player_inventory_green_teleporter;
player_inventory_green_teleporter = true;

globalvar player_inventory_orange_teleporter;
player_inventory_orange_teleporter = true;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string></string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>Environmental Stuff</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Environmental stuff
globalvar bezel;
bezel = 0;

// barrier_block
// barrier_block game logic properties
globalvar barrier_block_walking_friction; // Friction is simulated in game. In the Player's step code, under skidding, this force is applied when appropriate.
barrier_block_walking_friction = 100;

// barrier_block fixture properties
globalvar barrier_block_density;
barrier_block_density = 0;

globalvar barrier_block_restitution;
barrier_block_restitution = 0;

globalvar barrier_block_friction;
barrier_block_friction = 0.1;

globalvar barrier_block_linear_dampening;
barrier_block_linear_dampening = 0;

globalvar barrier_block_angular_dampening;
barrier_block_angular_dampening = 0;

globalvar barrier_block_collision_group;
barrier_block_collision_group = 0;

// barrier_block debug properties
globalvar barrier_block_collision_check_threshold;
barrier_block_collision_check_threshold = 1;


// push_block
// push_block game logic properties
globalvar push_block_walking_friction; // Friction is simulated in game. In the Player's step code, under skidding, this force is applied when appropriate.
push_block_walking_friction = 30;

// push_block fixture properties
globalvar push_block_density;
push_block_density = 10;

globalvar push_block_restitution;
push_block_restitution = 0;

globalvar push_block_friction;
push_block_friction = 10;

globalvar push_block_linear_dampening;
push_block_linear_dampening = 0;

globalvar push_block_angular_dampening;
push_block_angular_dampening = 0;

globalvar push_block_collision_group;
push_block_collision_group = 0;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string></string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>Teleporter stuff</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>globalvar green_teleporter_exists;
green_teleporter_exists = false;

globalvar orange_teleporter_exists;
orange_teleporter_exists = false;

globalvar teleporter_throwing_velocity;
teleporter_throwing_velocity = 10;

globalvar i_hass_the_rock_green;
i_hass_the_rock_green = -1;

globalvar i_hass_the_rock_orange;
i_hass_the_rock_orange = -1;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string></string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>Debug stuff</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Debug stuff

globalvar debug_movement;
debug_movement = false;

globalvar debug_player_collisions;
debug_player_collisions = false;

if (debug_player_collisions == true)
{
  globalvar debug_collision_point_x;
  debug_collision_point_x[0] = 0;
  debug_collision_point_x[1] = 0;
  
  globalvar debug_collision_point_y;
  debug_collision_point_y[0] = 0;
  debug_collision_point_y[1] = 0;
  
  globalvar debug_player_barrier_block_collision_occuring;
  debug_player_barrier_block_collision_occuring = false;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string></string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>Go to next room</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>room_goto(rm_start_cage);
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string></string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
